
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

// "thanks to my tutor for helping me learn and understand multithreding 
// he only tryed to kill me 7 times as i would repeatedly mess up"
//Dakota Malish - 2018
/**
 *
 * @author RedPanda13
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        userInputArea.setLineWrap(true);
        typeFaster.setMaximum(300);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userInputArea = new javax.swing.JTextArea();
        typeFaster = new javax.swing.JProgressBar();
        outputDisplay = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userInputArea.setColumns(20);
        userInputArea.setRows(5);
        userInputArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userInputAreaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(userInputArea);

        jLabel2.setText("Top 3 keys pressed");

        close.setText("Exit");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 419, Short.MAX_VALUE)
                .addComponent(close)
                .addContainerGap())
            .addComponent(typeFaster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(close)))
                .addGap(18, 18, 18)
                .addComponent(outputDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(typeFaster, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userInputAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userInputAreaKeyPressed
try
        {
            
//Create Key Count class
            KeyCount Key = new KeyCount();
            
//Create executor service
            ExecutorService execService = Executors.newCachedThreadPool();
            
//Create the synchronized buffer
            Buffer sharedLocation = new SynchronizedBuffer();
            
//grabs user input
            Key.setWords(userInputArea.getText());
            
//calculates counts
            Key.run();
            
//gets calculations for progress bar into buffer
            execService.execute(new Producer(sharedLocation, Key));
            
//fills progress bar from buffer
            typeFaster.setValue(sharedLocation.blockingGet());
            
//Updates keyclass
            Key.getTopThree(Key.getCountsArray());
            
//finds top 3 characters used
            String first = LetterValue(Key.getFirst());
            String second = LetterValue(Key.getSecond());
            String third = LetterValue(Key.getThird());
            
//Display the top 3 and their counts
            outputDisplay.setText("First: " + first + " Count: " + Key.getFirstCount() + " Second: " + second + " Count: " + Key.getSecondCount() + " Third: " + third + " Count: " + Key.getThirdCount());
            

            //when progress is full disable user input
            if(typeFaster.getValue() >= 300){userInputArea.setVisible(false); outputDisplay.setText(outputDisplay.getText() + "\t Finished!");}
            

            //disables extra threds
            execService.shutdown();
            execService.awaitTermination(0, TimeUnit.MINUTES);
        }
        //interupts thred 
        catch(InterruptedException exception)
        {
            Thread.currentThread().interrupt();
        }
    }//GEN-LAST:event_userInputAreaKeyPressed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed

      System.exit(0);
            
    }//GEN-LAST:event_closeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel outputDisplay;
    private javax.swing.JProgressBar typeFaster;
    private javax.swing.JTextArea userInputArea;
    // End of variables declaration//GEN-END:variables

private String LetterValue(int s)
    {
        //return variable
        String value = "";
        
        switch(s)
        {
            case 0:value = "A";break;
            case 1:value = "B";break;                
            case 2:value = "C";break;                
            case 3:value = "D";break;
            case 4:value = "E";break;                
            case 5:value = "F";break;        
            case 6:value = "G";break;
            case 7:value = "H";break;                
            case 8:value = "I";break;        
            case 9:value = "J";break;
            case 10:value = "K";break;                
            case 11:value = "L";break;        
            case 12:value = "M";break;
            case 13:value = "N";break;                
            case 14:value = "O";break; 
            case 15:value = "P";break;
            case 16:value = "Q";break;                
            case 17:value = "R";break;        
            case 18:value = "S";break;
            case 19:value = "T";break;                
            case 20:value = "U";break;  
            case 21:value = "V";break;
            case 22:value = "W";break;                
            case 23:value = "X";break;        
            case 24:value = "Y";break;
            case 25:value = "Z";break; 
           
            default:break; 
        }       
        return value;
    }





}
